version: '3.8'

services:
  app:
    build: .
    container_name: app
    ports:
      - '3000:3000' # Map container's port 80 to host's port 80
    environment:
      - NODE_ENV=production
    # depends_on:
    #   - database
    networks:
      - app_network
    labels:
      logging: 'promtail'
      logging_jobname: 'containerlogs'

  nginx:
    image: nginx:latest
    container_name: nginx_reverse_proxy
    restart: always
    ports:
      - '80:80'
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - app
    networks:
      - app_network

  mysql:
    image: bitnami/mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: 8e2a598cf27311ef
      MYSQL_DATABASE: ecom
      MYSQL_USER: user
      MYSQL_PASSWORD: 5036c792ec9b4666940f
    ports:
      - "3306:3306"
    networks:
      - app_network
    volumes:
      - mysql_data:/var/lib/mysql

networks:
  app_network:
volumes:
  mysql_data:

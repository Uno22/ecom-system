name: Deploy to EC2 on release push

on:
  push:
    branches:
      - release

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Debug EC2_HOST
        run: echo "EC2_HOST is ${{ secrets.EC2_HOST }}"
      
      - name: Copy `.env` from GitHub Secrets to EC2
        run: |
          pwd
          ls
          touch .env
          sudo chmod 666 .env
          echo "debug1"
          ls -lah .
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "debug2"
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
          echo "DB_ROOT_PASSWORD=${{ secrets.DB_ROOT_PASSWORD }}" >> .env
          echo "JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}" >> .env
          echo "JWT_EXPIRES_IN=${{ secrets.JWT_EXPIRES_IN }}" >> .env
          echo "ACCESS_TOKEN_SECRET_KEY=${{ secrets.ACCESS_TOKEN_SECRET_KEY }}" >> .env
          echo "ACCESS_TOKEN_EXPIRES_IN=${{ secrets.ACCESS_TOKEN_EXPIRES_IN }}" >> .env
          ls -lah .
          echo "copying $GITHUB_WORKSPACE/.env to EC2"
          echo "scp -i ${{ secrets.EC2_SSH_KEY }} .env ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}.ap-southeast-1.compute.amazonaws.com:/home/${{ secrets.EC2_USER }}/ecom-system/backend/"
          scp -i ${{ secrets.EC2_SSH_KEY }} $GITHUB_WORKSPACE/.env ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}.ap-southeast-1.compute.amazonaws.com:/home/${{ secrets.EC2_USER }}/ecom-system/backend/
          echo "completed copy"
          

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          # Use port 22 by default; override if necessary:
          port: ${{ secrets.EC2_PORT }}
          script: |
            cd ecom-system # Change this to your repo's directory on the EC2 instance
            git pull origin release
            cd backend
            sudo docker compose up -d --build app
